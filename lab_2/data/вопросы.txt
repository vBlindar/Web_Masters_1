1. Что такое динамическое представление веб-приложения?
2. Какие зависимости необходимы для создания динамического веб-приложения?
3. Как сервер передает данные в браузер в Spring Boot веб-приложениях?
4. Для чего используется параметр типа Model ?
5. Что необходимо прописать в HTML-файле, чтобы отразились переданные


1. **Что такое динамическое представление веб-приложения?**
   Динамическое представление веб-приложения — это веб-страница, которая формируется сервером на основе данных, полученных в процессе выполнения запроса. В отличие от статических страниц, динамические страницы содержат контент, который может изменяться в зависимости от данных, переданных сервером (например, имя пользователя, результаты поиска и т.д.).

2. **Какие зависимости необходимы для создания динамического веб-приложения?**
   Для создания динамического веб-приложения с использованием Spring Boot и Apache FreeMarker необходимо следующие зависимости в файле `pom.xml`:
   - `spring-boot-starter-web` — для создания веб-приложений.
   - `spring-boot-starter-freemarker` — для интеграции с шаблонизатором FreeMarker.
   Эти зависимости обеспечат поддержку MVC, контроллеров и шаблонов для создания динамических страниц.

3. **Как сервер передает данные в браузер в Spring Boot веб-приложениях?**
   В Spring Boot веб-приложениях сервер передает данные в браузер через контроллеры, которые добавляют данные в модель (объект типа `Model`). Затем представление (например, FreeMarker-шаблон) использует эти данные для формирования HTML-страницы, которая отправляется клиенту.

4. **Для чего используется параметр типа `Model`?**
   Параметр `Model` используется для передачи данных от контроллера к представлению. Контроллер добавляет данные в модель с помощью методов `addAttribute` или `addAllAttributes`, а шаблонизатор (например, FreeMarker) использует эти данные для динамического формирования страницы.

5. **Что необходимо прописать в HTML-файле, чтобы отразились переданные данные?**
   В FreeMarker-шаблоне, чтобы отразить переданные данные, используются специальные теги. Например, для отображения данных, переданных через `model`, можно использовать такие конструкции:

```html
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Данные пользователя</title>
</head>
<body>
    <h1>Добро пожаловать, ${name}!</h1>
    <p>Специальность: ${speciality}</p>
    <p>Курс: ${course}</p>
    <p>Группа: ${group}</p>
</body>
</html>
```

Когда контроллер вернет шаблон `index`, FreeMarker автоматически подставит значения из модели (например, `name`, `speciality`, `course`, `group`) в соответствующие места в HTML-шаблоне.